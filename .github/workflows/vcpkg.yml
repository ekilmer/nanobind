name: Vcpkg Tests

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - stable
      - v*
      - "*"

concurrency:
  group: vcpkg-test-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # This is the "main" test suite, which tests a large number of different
  # versions of default compilers and Python versions in GitHub Actions.
  standard:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-2022', 'macos-latest']
        python: ['3.8', '3.9', '3.10', '3.11', '3.12', 'pypy3.9-v7.3.12', 'pypy3.10-v7.3.12']

    name: "Vcpkg Python ${{ matrix.python }} / ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      env:
        VCPKG_INSTALLED_DIR: ${{github.workspace}}/vcpkg/installed
      with:
        vcpkgGitCommitId: 8eb57355a4ffb410a2e94c07b4dca2dffbee8e50 # 2023.10.19
        runVcpkgInstall: true
        vcpkgJsonGlob: vcpkg.json

    - name: Install Eigen
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get -y install libeigen3-dev

    - name: Install PyTest
      run: |
        python -m pip install pytest pytest-github-actions-annotate-failures

    - name: Install NumPy
      if: ${{ !startsWith(matrix.python, 'pypy') }}
      run: |
        python3 -m pip install numpy scipy jax[cpu] ${{ !contains(matrix.python, '3.12') && 'torch tensorflow' || '' }}

    - name: Configure
      run: >
        cmake -S . -B build
        -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake
        -DCMAKE_BUILD_TYPE=Release
        -DNB_DEVELOPER_MODE=ON
        -DNB_TEST_STABLE_ABI=ON
        -DNB_USE_SUBMODULE_DEPS=OFF
        "-DNB_TEST_SHARED_BUILD=$(python3 -c 'import sys; print(int(sys.version_info.minor>=11))')"

    - name: Build C++
      run: cmake --build build --config Release -j 2

    - name: Run tests
      working-directory: build
      run: python3 -m pytest

      # Mimic packaging.
    - name: Install
      run: |
        cmake -S . -B build-minimal -DNB_USE_SUBMODULE_DEPS=OFF -DCMAKE_BUILD_TYPE=Release
        cmake --install build-minimal --config Release --prefix install

    - name: Test Install (Configure)
      run: >
        cmake -S tests -B build-tests
        -Dnanobind_ROOT=${{github.workspace}}/install
        -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake
        -DCMAKE_BUILD_TYPE=Release
        -DNB_TEST_STABLE_ABI=ON
        "-DNB_TEST_SHARED_BUILD=$(python3 -c 'import sys; print(int(sys.version_info.minor>=11))')"

    - name: Test Install (Build)
      run:
        cmake --build build-tests --config Release -j 2

    - name: Test Install (Run)
      run:
        ctest --verbose -C Release --test-dir build-tests
